#+REVEAL_HLEVEL: 2
#+TITLE: Introduction to SQLAlchemy
#+AUTHOR: Ricardo Martinez, Ignasi Fosch
* Why ORM?
** What is a ORM?
    ORM, meaning Object Relationship Mapping, is a library providing an abstraction layer over a database and its structure.
    
** Features
    A ORM provides the following:
     * Database engine abstraction
     * Query language abstraction, at least about the details
     * Work with objects instead of records, tables, raw data.

** Discussion
*** http://opensourceforu.com/2009/05/database-programming-in-python/
    
*** http://www.yegor256.com/2014/12/01/orm-offensive-anti-pattern.html
    
*** https://www.reddit.com/r/Python/comments/5fyr32/orm_or_not/

*** https://www.fullstackpython.com/object-relational-mappers-orms.html

*** http://www.agiledata.org/essays/impedanceMismatch.html

*** http://www.yegor256.com/code-ahead.html

*** https://martinfowler.com/bliki/OrmHate.html

*** https://blog.codinghorror.com/object-relational-mapping-is-the-vietnam-of-computer-science/

*** http://blogs.tedneward.com/post/the-vietnam-of-computer-science/

*** http://seldo.com/weblog/2011/08/11/orm_is_an_antipattern

*** http://techblog.bozho.net/orm-haters-dont-get-it/

*** http://docs.python-guide.org/en/latest/scenarios/db/

* Exercise description
  In this session, we'll work on a very simple application for libraries, providing basic operations on their books.
  The underlying database will have the following tables:
** Authors:
       | Field | Description                 |
       | id    | Identifier for every record |
       | name  | Name of the Author          |
       | birth | Author's date of birth      |
** Books:
       | Field          | Description                  |
       | id             | Identifier for every record  |
       | title          | Title of the book            |
       | author_id      | Id of this book's author     |
       | published_in   | Date this book was published |
** Requirements to implement
  The program we've been requested to write has the following features:
    * Add, remove, update, and list authors
    * Add, remove, and update books
    * List books, which should show the author's name
    * Search for books which authors were born within a range of dates
    * Search for authors who published books within a range of years
    * List all books published by an author

  To be time-savvy, we're providing a sqlite database with this structure already setup, and with a few example records.

* Example without SQLAlchemy
   
* Tool with SQLAlchemy
   
* Second iteration
*** Implement the same system, but with multiple authors per book
